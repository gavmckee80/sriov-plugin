// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/sriov.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_sriov_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{0}
}

type VF struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VfPci         string                 `protobuf:"bytes,1,opt,name=vf_pci,json=vfPci,proto3" json:"vf_pci,omitempty"`
	PfPci         string                 `protobuf:"bytes,2,opt,name=pf_pci,json=pfPci,proto3" json:"pf_pci,omitempty"`
	Interface     string                 `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	Representor   string                 `protobuf:"bytes,4,opt,name=representor,proto3" json:"representor,omitempty"`
	NumaNode      string                 `protobuf:"bytes,5,opt,name=numa_node,json=numaNode,proto3" json:"numa_node,omitempty"`
	LinkState     string                 `protobuf:"bytes,6,opt,name=link_state,json=linkState,proto3" json:"link_state,omitempty"`
	LinkSpeed     string                 `protobuf:"bytes,7,opt,name=link_speed,json=linkSpeed,proto3" json:"link_speed,omitempty"`
	Allocated     bool                   `protobuf:"varint,8,opt,name=allocated,proto3" json:"allocated,omitempty"`
	Masked        bool                   `protobuf:"varint,9,opt,name=masked,proto3" json:"masked,omitempty"`
	Features      map[string]bool        `protobuf:"bytes,10,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	RxRings       uint32                 `protobuf:"varint,11,opt,name=rx_rings,json=rxRings,proto3" json:"rx_rings,omitempty"`
	TxRings       uint32                 `protobuf:"varint,12,opt,name=tx_rings,json=txRings,proto3" json:"tx_rings,omitempty"`
	RxMax         uint32                 `protobuf:"varint,13,opt,name=rx_max,json=rxMax,proto3" json:"rx_max,omitempty"`
	TxMax         uint32                 `protobuf:"varint,14,opt,name=tx_max,json=txMax,proto3" json:"tx_max,omitempty"`
	RxChannels    uint32                 `protobuf:"varint,15,opt,name=rx_channels,json=rxChannels,proto3" json:"rx_channels,omitempty"`
	TxChannels    uint32                 `protobuf:"varint,16,opt,name=tx_channels,json=txChannels,proto3" json:"tx_channels,omitempty"`
	LastUpdated   string                 `protobuf:"bytes,17,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Driver        string                 `protobuf:"bytes,18,opt,name=driver,proto3" json:"driver,omitempty"`
	Mode          string                 `protobuf:"bytes,19,opt,name=mode,proto3" json:"mode,omitempty"`
	State         string                 `protobuf:"bytes,20,opt,name=state,proto3" json:"state,omitempty"`
	Pool          string                 `protobuf:"bytes,21,opt,name=pool,proto3" json:"pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VF) Reset() {
	*x = VF{}
	mi := &file_proto_sriov_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VF) ProtoMessage() {}

func (x *VF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VF.ProtoReflect.Descriptor instead.
func (*VF) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{1}
}

func (x *VF) GetVfPci() string {
	if x != nil {
		return x.VfPci
	}
	return ""
}

func (x *VF) GetPfPci() string {
	if x != nil {
		return x.PfPci
	}
	return ""
}

func (x *VF) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *VF) GetRepresentor() string {
	if x != nil {
		return x.Representor
	}
	return ""
}

func (x *VF) GetNumaNode() string {
	if x != nil {
		return x.NumaNode
	}
	return ""
}

func (x *VF) GetLinkState() string {
	if x != nil {
		return x.LinkState
	}
	return ""
}

func (x *VF) GetLinkSpeed() string {
	if x != nil {
		return x.LinkSpeed
	}
	return ""
}

func (x *VF) GetAllocated() bool {
	if x != nil {
		return x.Allocated
	}
	return false
}

func (x *VF) GetMasked() bool {
	if x != nil {
		return x.Masked
	}
	return false
}

func (x *VF) GetFeatures() map[string]bool {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *VF) GetRxRings() uint32 {
	if x != nil {
		return x.RxRings
	}
	return 0
}

func (x *VF) GetTxRings() uint32 {
	if x != nil {
		return x.TxRings
	}
	return 0
}

func (x *VF) GetRxMax() uint32 {
	if x != nil {
		return x.RxMax
	}
	return 0
}

func (x *VF) GetTxMax() uint32 {
	if x != nil {
		return x.TxMax
	}
	return 0
}

func (x *VF) GetRxChannels() uint32 {
	if x != nil {
		return x.RxChannels
	}
	return 0
}

func (x *VF) GetTxChannels() uint32 {
	if x != nil {
		return x.TxChannels
	}
	return 0
}

func (x *VF) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *VF) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *VF) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *VF) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VF) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

type PF struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PfPci         string                 `protobuf:"bytes,1,opt,name=pf_pci,json=pfPci,proto3" json:"pf_pci,omitempty"`
	Interface     string                 `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	Vfs           []*VF                  `protobuf:"bytes,3,rep,name=vfs,proto3" json:"vfs,omitempty"`
	Pool          string                 `protobuf:"bytes,4,opt,name=pool,proto3" json:"pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PF) Reset() {
	*x = PF{}
	mi := &file_proto_sriov_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PF) ProtoMessage() {}

func (x *PF) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PF.ProtoReflect.Descriptor instead.
func (*PF) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{2}
}

func (x *PF) GetPfPci() string {
	if x != nil {
		return x.PfPci
	}
	return ""
}

func (x *PF) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *PF) GetVfs() []*VF {
	if x != nil {
		return x.Vfs
	}
	return nil
}

func (x *PF) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

type DeviceList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pfs           []*PF                  `protobuf:"bytes,1,rep,name=pfs,proto3" json:"pfs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceList) Reset() {
	*x = DeviceList{}
	mi := &file_proto_sriov_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceList) ProtoMessage() {}

func (x *DeviceList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceList.ProtoReflect.Descriptor instead.
func (*DeviceList) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceList) GetPfs() []*PF {
	if x != nil {
		return x.Pfs
	}
	return nil
}

type AllocationRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PfPci            string                 `protobuf:"bytes,1,opt,name=pf_pci,json=pfPci,proto3" json:"pf_pci,omitempty"`
	Count            uint32                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	NumaNode         string                 `protobuf:"bytes,3,opt,name=numa_node,json=numaNode,proto3" json:"numa_node,omitempty"`
	RequiredFeatures []string               `protobuf:"bytes,4,rep,name=required_features,json=requiredFeatures,proto3" json:"required_features,omitempty"`
	DryRun           bool                   `protobuf:"varint,5,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AllocationRequest) Reset() {
	*x = AllocationRequest{}
	mi := &file_proto_sriov_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationRequest) ProtoMessage() {}

func (x *AllocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationRequest.ProtoReflect.Descriptor instead.
func (*AllocationRequest) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{4}
}

func (x *AllocationRequest) GetPfPci() string {
	if x != nil {
		return x.PfPci
	}
	return ""
}

func (x *AllocationRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AllocationRequest) GetNumaNode() string {
	if x != nil {
		return x.NumaNode
	}
	return ""
}

func (x *AllocationRequest) GetRequiredFeatures() []string {
	if x != nil {
		return x.RequiredFeatures
	}
	return nil
}

func (x *AllocationRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type AllocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllocatedVfs  []*VF                  `protobuf:"bytes,1,rep,name=allocated_vfs,json=allocatedVfs,proto3" json:"allocated_vfs,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocationResponse) Reset() {
	*x = AllocationResponse{}
	mi := &file_proto_sriov_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationResponse) ProtoMessage() {}

func (x *AllocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationResponse.ProtoReflect.Descriptor instead.
func (*AllocationResponse) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{5}
}

func (x *AllocationResponse) GetAllocatedVfs() []*VF {
	if x != nil {
		return x.AllocatedVfs
	}
	return nil
}

func (x *AllocationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VfPcis        []string               `protobuf:"bytes,1,rep,name=vf_pcis,json=vfPcis,proto3" json:"vf_pcis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	mi := &file_proto_sriov_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{6}
}

func (x *ReleaseRequest) GetVfPcis() []string {
	if x != nil {
		return x.VfPcis
	}
	return nil
}

type ReleaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Released      []string               `protobuf:"bytes,1,rep,name=released,proto3" json:"released,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseResponse) Reset() {
	*x = ReleaseResponse{}
	mi := &file_proto_sriov_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseResponse) ProtoMessage() {}

func (x *ReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseResponse.ProtoReflect.Descriptor instead.
func (*ReleaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{7}
}

func (x *ReleaseResponse) GetReleased() []string {
	if x != nil {
		return x.Released
	}
	return nil
}

func (x *ReleaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VfPci         string                 `protobuf:"bytes,1,opt,name=vf_pci,json=vfPci,proto3" json:"vf_pci,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskRequest) Reset() {
	*x = MaskRequest{}
	mi := &file_proto_sriov_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskRequest) ProtoMessage() {}

func (x *MaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskRequest.ProtoReflect.Descriptor instead.
func (*MaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{8}
}

func (x *MaskRequest) GetVfPci() string {
	if x != nil {
		return x.VfPci
	}
	return ""
}

func (x *MaskRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type MaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskResponse) Reset() {
	*x = MaskResponse{}
	mi := &file_proto_sriov_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskResponse) ProtoMessage() {}

func (x *MaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskResponse.ProtoReflect.Descriptor instead.
func (*MaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{9}
}

func (x *MaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UnmaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VfPci         string                 `protobuf:"bytes,1,opt,name=vf_pci,json=vfPci,proto3" json:"vf_pci,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmaskRequest) Reset() {
	*x = UnmaskRequest{}
	mi := &file_proto_sriov_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmaskRequest) ProtoMessage() {}

func (x *UnmaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmaskRequest.ProtoReflect.Descriptor instead.
func (*UnmaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{10}
}

func (x *UnmaskRequest) GetVfPci() string {
	if x != nil {
		return x.VfPci
	}
	return ""
}

type UnmaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmaskResponse) Reset() {
	*x = UnmaskResponse{}
	mi := &file_proto_sriov_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmaskResponse) ProtoMessage() {}

func (x *UnmaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmaskResponse.ProtoReflect.Descriptor instead.
func (*UnmaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{11}
}

func (x *UnmaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnmaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PoolSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PfPci         string                 `protobuf:"bytes,1,opt,name=pf_pci,json=pfPci,proto3" json:"pf_pci,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Total         uint32                 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Allocated     uint32                 `protobuf:"varint,4,opt,name=allocated,proto3" json:"allocated,omitempty"`
	Masked        uint32                 `protobuf:"varint,5,opt,name=masked,proto3" json:"masked,omitempty"`
	Free          uint32                 `protobuf:"varint,6,opt,name=free,proto3" json:"free,omitempty"`
	PercentFree   float32                `protobuf:"fixed32,7,opt,name=percent_free,json=percentFree,proto3" json:"percent_free,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolSummary) Reset() {
	*x = PoolSummary{}
	mi := &file_proto_sriov_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolSummary) ProtoMessage() {}

func (x *PoolSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolSummary.ProtoReflect.Descriptor instead.
func (*PoolSummary) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{12}
}

func (x *PoolSummary) GetPfPci() string {
	if x != nil {
		return x.PfPci
	}
	return ""
}

func (x *PoolSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PoolSummary) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PoolSummary) GetAllocated() uint32 {
	if x != nil {
		return x.Allocated
	}
	return 0
}

func (x *PoolSummary) GetMasked() uint32 {
	if x != nil {
		return x.Masked
	}
	return 0
}

func (x *PoolSummary) GetFree() uint32 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *PoolSummary) GetPercentFree() float32 {
	if x != nil {
		return x.PercentFree
	}
	return 0
}

type StatusReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pools         []*PoolSummary         `protobuf:"bytes,1,rep,name=pools,proto3" json:"pools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusReport) Reset() {
	*x = StatusReport{}
	mi := &file_proto_sriov_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReport) ProtoMessage() {}

func (x *StatusReport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReport.ProtoReflect.Descriptor instead.
func (*StatusReport) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{13}
}

func (x *StatusReport) GetPools() []*PoolSummary {
	if x != nil {
		return x.Pools
	}
	return nil
}

type PoolQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolQuery) Reset() {
	*x = PoolQuery{}
	mi := &file_proto_sriov_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolQuery) ProtoMessage() {}

func (x *PoolQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolQuery.ProtoReflect.Descriptor instead.
func (*PoolQuery) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{14}
}

func (x *PoolQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PoolConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PfPci            string                 `protobuf:"bytes,2,opt,name=pf_pci,json=pfPci,proto3" json:"pf_pci,omitempty"`
	VfRange          string                 `protobuf:"bytes,3,opt,name=vf_range,json=vfRange,proto3" json:"vf_range,omitempty"`
	Mask             bool                   `protobuf:"varint,4,opt,name=mask,proto3" json:"mask,omitempty"`
	MaskReason       string                 `protobuf:"bytes,5,opt,name=mask_reason,json=maskReason,proto3" json:"mask_reason,omitempty"`
	RequiredFeatures []string               `protobuf:"bytes,6,rep,name=required_features,json=requiredFeatures,proto3" json:"required_features,omitempty"`
	Numa             string                 `protobuf:"bytes,7,opt,name=numa,proto3" json:"numa,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PoolConfig) Reset() {
	*x = PoolConfig{}
	mi := &file_proto_sriov_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolConfig) ProtoMessage() {}

func (x *PoolConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolConfig.ProtoReflect.Descriptor instead.
func (*PoolConfig) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{15}
}

func (x *PoolConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PoolConfig) GetPfPci() string {
	if x != nil {
		return x.PfPci
	}
	return ""
}

func (x *PoolConfig) GetVfRange() string {
	if x != nil {
		return x.VfRange
	}
	return ""
}

func (x *PoolConfig) GetMask() bool {
	if x != nil {
		return x.Mask
	}
	return false
}

func (x *PoolConfig) GetMaskReason() string {
	if x != nil {
		return x.MaskReason
	}
	return ""
}

func (x *PoolConfig) GetRequiredFeatures() []string {
	if x != nil {
		return x.RequiredFeatures
	}
	return nil
}

func (x *PoolConfig) GetNuma() string {
	if x != nil {
		return x.Numa
	}
	return ""
}

type PoolList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolList) Reset() {
	*x = PoolList{}
	mi := &file_proto_sriov_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolList) ProtoMessage() {}

func (x *PoolList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolList.ProtoReflect.Descriptor instead.
func (*PoolList) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{16}
}

func (x *PoolList) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type InterfaceDump struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonData      string                 `protobuf:"bytes,1,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Timestamp     string                 `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceDump) Reset() {
	*x = InterfaceDump{}
	mi := &file_proto_sriov_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceDump) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceDump) ProtoMessage() {}

func (x *InterfaceDump) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceDump.ProtoReflect.Descriptor instead.
func (*InterfaceDump) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{17}
}

func (x *InterfaceDump) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *InterfaceDump) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *InterfaceDump) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type InterfaceQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InterfaceName string                 `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	OutputFormat  string                 `protobuf:"bytes,2,opt,name=output_format,json=outputFormat,proto3" json:"output_format,omitempty"` // "json" or "table"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceQuery) Reset() {
	*x = InterfaceQuery{}
	mi := &file_proto_sriov_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceQuery) ProtoMessage() {}

func (x *InterfaceQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceQuery.ProtoReflect.Descriptor instead.
func (*InterfaceQuery) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{18}
}

func (x *InterfaceQuery) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *InterfaceQuery) GetOutputFormat() string {
	if x != nil {
		return x.OutputFormat
	}
	return ""
}

type InterfaceDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InterfaceName string                 `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	PciAddress    string                 `protobuf:"bytes,2,opt,name=pci_address,json=pciAddress,proto3" json:"pci_address,omitempty"`
	InterfaceType string                 `protobuf:"bytes,3,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"` // "PF" or "VF"
	ParentPf      string                 `protobuf:"bytes,4,opt,name=parent_pf,json=parentPf,proto3" json:"parent_pf,omitempty"`                // for VFs
	Driver        string                 `protobuf:"bytes,5,opt,name=driver,proto3" json:"driver,omitempty"`
	NumaNode      string                 `protobuf:"bytes,6,opt,name=numa_node,json=numaNode,proto3" json:"numa_node,omitempty"`
	LinkState     string                 `protobuf:"bytes,7,opt,name=link_state,json=linkState,proto3" json:"link_state,omitempty"`
	LinkSpeed     string                 `protobuf:"bytes,8,opt,name=link_speed,json=linkSpeed,proto3" json:"link_speed,omitempty"`
	Features      map[string]bool        `protobuf:"bytes,9,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Properties    map[string]string      `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Pool          string                 `protobuf:"bytes,11,opt,name=pool,proto3" json:"pool,omitempty"`
	Allocated     bool                   `protobuf:"varint,12,opt,name=allocated,proto3" json:"allocated,omitempty"`
	Masked        bool                   `protobuf:"varint,13,opt,name=masked,proto3" json:"masked,omitempty"`
	MaskReason    string                 `protobuf:"bytes,14,opt,name=mask_reason,json=maskReason,proto3" json:"mask_reason,omitempty"`
	JsonData      string                 `protobuf:"bytes,15,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	TableData     string                 `protobuf:"bytes,16,opt,name=table_data,json=tableData,proto3" json:"table_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceDetails) Reset() {
	*x = InterfaceDetails{}
	mi := &file_proto_sriov_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceDetails) ProtoMessage() {}

func (x *InterfaceDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceDetails.ProtoReflect.Descriptor instead.
func (*InterfaceDetails) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{19}
}

func (x *InterfaceDetails) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *InterfaceDetails) GetPciAddress() string {
	if x != nil {
		return x.PciAddress
	}
	return ""
}

func (x *InterfaceDetails) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *InterfaceDetails) GetParentPf() string {
	if x != nil {
		return x.ParentPf
	}
	return ""
}

func (x *InterfaceDetails) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *InterfaceDetails) GetNumaNode() string {
	if x != nil {
		return x.NumaNode
	}
	return ""
}

func (x *InterfaceDetails) GetLinkState() string {
	if x != nil {
		return x.LinkState
	}
	return ""
}

func (x *InterfaceDetails) GetLinkSpeed() string {
	if x != nil {
		return x.LinkSpeed
	}
	return ""
}

func (x *InterfaceDetails) GetFeatures() map[string]bool {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *InterfaceDetails) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *InterfaceDetails) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *InterfaceDetails) GetAllocated() bool {
	if x != nil {
		return x.Allocated
	}
	return false
}

func (x *InterfaceDetails) GetMasked() bool {
	if x != nil {
		return x.Masked
	}
	return false
}

func (x *InterfaceDetails) GetMaskReason() string {
	if x != nil {
		return x.MaskReason
	}
	return ""
}

func (x *InterfaceDetails) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *InterfaceDetails) GetTableData() string {
	if x != nil {
		return x.TableData
	}
	return ""
}

type PFQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PfInterface   string                 `protobuf:"bytes,1,opt,name=pf_interface,json=pfInterface,proto3" json:"pf_interface,omitempty"`
	OutputFormat  string                 `protobuf:"bytes,2,opt,name=output_format,json=outputFormat,proto3" json:"output_format,omitempty"` // "json" or "table"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PFQuery) Reset() {
	*x = PFQuery{}
	mi := &file_proto_sriov_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PFQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PFQuery) ProtoMessage() {}

func (x *PFQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PFQuery.ProtoReflect.Descriptor instead.
func (*PFQuery) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{20}
}

func (x *PFQuery) GetPfInterface() string {
	if x != nil {
		return x.PfInterface
	}
	return ""
}

func (x *PFQuery) GetOutputFormat() string {
	if x != nil {
		return x.OutputFormat
	}
	return ""
}

type PFHierarchy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PfInterface   string                 `protobuf:"bytes,1,opt,name=pf_interface,json=pfInterface,proto3" json:"pf_interface,omitempty"`
	PfPci         string                 `protobuf:"bytes,2,opt,name=pf_pci,json=pfPci,proto3" json:"pf_pci,omitempty"`
	PfDetails     *InterfaceDetails      `protobuf:"bytes,3,opt,name=pf_details,json=pfDetails,proto3" json:"pf_details,omitempty"`
	Vfs           []*InterfaceDetails    `protobuf:"bytes,4,rep,name=vfs,proto3" json:"vfs,omitempty"`
	JsonData      string                 `protobuf:"bytes,5,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	TableData     string                 `protobuf:"bytes,6,opt,name=table_data,json=tableData,proto3" json:"table_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PFHierarchy) Reset() {
	*x = PFHierarchy{}
	mi := &file_proto_sriov_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PFHierarchy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PFHierarchy) ProtoMessage() {}

func (x *PFHierarchy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sriov_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PFHierarchy.ProtoReflect.Descriptor instead.
func (*PFHierarchy) Descriptor() ([]byte, []int) {
	return file_proto_sriov_proto_rawDescGZIP(), []int{21}
}

func (x *PFHierarchy) GetPfInterface() string {
	if x != nil {
		return x.PfInterface
	}
	return ""
}

func (x *PFHierarchy) GetPfPci() string {
	if x != nil {
		return x.PfPci
	}
	return ""
}

func (x *PFHierarchy) GetPfDetails() *InterfaceDetails {
	if x != nil {
		return x.PfDetails
	}
	return nil
}

func (x *PFHierarchy) GetVfs() []*InterfaceDetails {
	if x != nil {
		return x.Vfs
	}
	return nil
}

func (x *PFHierarchy) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *PFHierarchy) GetTableData() string {
	if x != nil {
		return x.TableData
	}
	return ""
}

var File_proto_sriov_proto protoreflect.FileDescriptor

const file_proto_sriov_proto_rawDesc = "" +
	"\n" +
	"\x11proto/sriov.proto\x12\x05sriov\"\a\n" +
	"\x05Empty\"\x94\x05\n" +
	"\x02VF\x12\x15\n" +
	"\x06vf_pci\x18\x01 \x01(\tR\x05vfPci\x12\x15\n" +
	"\x06pf_pci\x18\x02 \x01(\tR\x05pfPci\x12\x1c\n" +
	"\tinterface\x18\x03 \x01(\tR\tinterface\x12 \n" +
	"\vrepresentor\x18\x04 \x01(\tR\vrepresentor\x12\x1b\n" +
	"\tnuma_node\x18\x05 \x01(\tR\bnumaNode\x12\x1d\n" +
	"\n" +
	"link_state\x18\x06 \x01(\tR\tlinkState\x12\x1d\n" +
	"\n" +
	"link_speed\x18\a \x01(\tR\tlinkSpeed\x12\x1c\n" +
	"\tallocated\x18\b \x01(\bR\tallocated\x12\x16\n" +
	"\x06masked\x18\t \x01(\bR\x06masked\x123\n" +
	"\bfeatures\x18\n" +
	" \x03(\v2\x17.sriov.VF.FeaturesEntryR\bfeatures\x12\x19\n" +
	"\brx_rings\x18\v \x01(\rR\arxRings\x12\x19\n" +
	"\btx_rings\x18\f \x01(\rR\atxRings\x12\x15\n" +
	"\x06rx_max\x18\r \x01(\rR\x05rxMax\x12\x15\n" +
	"\x06tx_max\x18\x0e \x01(\rR\x05txMax\x12\x1f\n" +
	"\vrx_channels\x18\x0f \x01(\rR\n" +
	"rxChannels\x12\x1f\n" +
	"\vtx_channels\x18\x10 \x01(\rR\n" +
	"txChannels\x12!\n" +
	"\flast_updated\x18\x11 \x01(\tR\vlastUpdated\x12\x16\n" +
	"\x06driver\x18\x12 \x01(\tR\x06driver\x12\x12\n" +
	"\x04mode\x18\x13 \x01(\tR\x04mode\x12\x14\n" +
	"\x05state\x18\x14 \x01(\tR\x05state\x12\x12\n" +
	"\x04pool\x18\x15 \x01(\tR\x04pool\x1a;\n" +
	"\rFeaturesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"j\n" +
	"\x02PF\x12\x15\n" +
	"\x06pf_pci\x18\x01 \x01(\tR\x05pfPci\x12\x1c\n" +
	"\tinterface\x18\x02 \x01(\tR\tinterface\x12\x1b\n" +
	"\x03vfs\x18\x03 \x03(\v2\t.sriov.VFR\x03vfs\x12\x12\n" +
	"\x04pool\x18\x04 \x01(\tR\x04pool\")\n" +
	"\n" +
	"DeviceList\x12\x1b\n" +
	"\x03pfs\x18\x01 \x03(\v2\t.sriov.PFR\x03pfs\"\xa3\x01\n" +
	"\x11AllocationRequest\x12\x15\n" +
	"\x06pf_pci\x18\x01 \x01(\tR\x05pfPci\x12\x14\n" +
	"\x05count\x18\x02 \x01(\rR\x05count\x12\x1b\n" +
	"\tnuma_node\x18\x03 \x01(\tR\bnumaNode\x12+\n" +
	"\x11required_features\x18\x04 \x03(\tR\x10requiredFeatures\x12\x17\n" +
	"\adry_run\x18\x05 \x01(\bR\x06dryRun\"^\n" +
	"\x12AllocationResponse\x12.\n" +
	"\rallocated_vfs\x18\x01 \x03(\v2\t.sriov.VFR\fallocatedVfs\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\")\n" +
	"\x0eReleaseRequest\x12\x17\n" +
	"\avf_pcis\x18\x01 \x03(\tR\x06vfPcis\"G\n" +
	"\x0fReleaseResponse\x12\x1a\n" +
	"\breleased\x18\x01 \x03(\tR\breleased\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"<\n" +
	"\vMaskRequest\x12\x15\n" +
	"\x06vf_pci\x18\x01 \x01(\tR\x05vfPci\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"B\n" +
	"\fMaskResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"&\n" +
	"\rUnmaskRequest\x12\x15\n" +
	"\x06vf_pci\x18\x01 \x01(\tR\x05vfPci\"D\n" +
	"\x0eUnmaskResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xbb\x01\n" +
	"\vPoolSummary\x12\x15\n" +
	"\x06pf_pci\x18\x01 \x01(\tR\x05pfPci\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05total\x18\x03 \x01(\rR\x05total\x12\x1c\n" +
	"\tallocated\x18\x04 \x01(\rR\tallocated\x12\x16\n" +
	"\x06masked\x18\x05 \x01(\rR\x06masked\x12\x12\n" +
	"\x04free\x18\x06 \x01(\rR\x04free\x12!\n" +
	"\fpercent_free\x18\a \x01(\x02R\vpercentFree\"8\n" +
	"\fStatusReport\x12(\n" +
	"\x05pools\x18\x01 \x03(\v2\x12.sriov.PoolSummaryR\x05pools\"\x1f\n" +
	"\tPoolQuery\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xc8\x01\n" +
	"\n" +
	"PoolConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x15\n" +
	"\x06pf_pci\x18\x02 \x01(\tR\x05pfPci\x12\x19\n" +
	"\bvf_range\x18\x03 \x01(\tR\avfRange\x12\x12\n" +
	"\x04mask\x18\x04 \x01(\bR\x04mask\x12\x1f\n" +
	"\vmask_reason\x18\x05 \x01(\tR\n" +
	"maskReason\x12+\n" +
	"\x11required_features\x18\x06 \x03(\tR\x10requiredFeatures\x12\x12\n" +
	"\x04numa\x18\a \x01(\tR\x04numa\" \n" +
	"\bPoolList\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"d\n" +
	"\rInterfaceDump\x12\x1b\n" +
	"\tjson_data\x18\x01 \x01(\tR\bjsonData\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"\\\n" +
	"\x0eInterfaceQuery\x12%\n" +
	"\x0einterface_name\x18\x01 \x01(\tR\rinterfaceName\x12#\n" +
	"\routput_format\x18\x02 \x01(\tR\foutputFormat\"\xc0\x05\n" +
	"\x10InterfaceDetails\x12%\n" +
	"\x0einterface_name\x18\x01 \x01(\tR\rinterfaceName\x12\x1f\n" +
	"\vpci_address\x18\x02 \x01(\tR\n" +
	"pciAddress\x12%\n" +
	"\x0einterface_type\x18\x03 \x01(\tR\rinterfaceType\x12\x1b\n" +
	"\tparent_pf\x18\x04 \x01(\tR\bparentPf\x12\x16\n" +
	"\x06driver\x18\x05 \x01(\tR\x06driver\x12\x1b\n" +
	"\tnuma_node\x18\x06 \x01(\tR\bnumaNode\x12\x1d\n" +
	"\n" +
	"link_state\x18\a \x01(\tR\tlinkState\x12\x1d\n" +
	"\n" +
	"link_speed\x18\b \x01(\tR\tlinkSpeed\x12A\n" +
	"\bfeatures\x18\t \x03(\v2%.sriov.InterfaceDetails.FeaturesEntryR\bfeatures\x12G\n" +
	"\n" +
	"properties\x18\n" +
	" \x03(\v2'.sriov.InterfaceDetails.PropertiesEntryR\n" +
	"properties\x12\x12\n" +
	"\x04pool\x18\v \x01(\tR\x04pool\x12\x1c\n" +
	"\tallocated\x18\f \x01(\bR\tallocated\x12\x16\n" +
	"\x06masked\x18\r \x01(\bR\x06masked\x12\x1f\n" +
	"\vmask_reason\x18\x0e \x01(\tR\n" +
	"maskReason\x12\x1b\n" +
	"\tjson_data\x18\x0f \x01(\tR\bjsonData\x12\x1d\n" +
	"\n" +
	"table_data\x18\x10 \x01(\tR\ttableData\x1a;\n" +
	"\rFeaturesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Q\n" +
	"\aPFQuery\x12!\n" +
	"\fpf_interface\x18\x01 \x01(\tR\vpfInterface\x12#\n" +
	"\routput_format\x18\x02 \x01(\tR\foutputFormat\"\xe6\x01\n" +
	"\vPFHierarchy\x12!\n" +
	"\fpf_interface\x18\x01 \x01(\tR\vpfInterface\x12\x15\n" +
	"\x06pf_pci\x18\x02 \x01(\tR\x05pfPci\x126\n" +
	"\n" +
	"pf_details\x18\x03 \x01(\v2\x17.sriov.InterfaceDetailsR\tpfDetails\x12)\n" +
	"\x03vfs\x18\x04 \x03(\v2\x17.sriov.InterfaceDetailsR\x03vfs\x12\x1b\n" +
	"\tjson_data\x18\x05 \x01(\tR\bjsonData\x12\x1d\n" +
	"\n" +
	"table_data\x18\x06 \x01(\tR\ttableData2\xf6\x04\n" +
	"\x12SriovDeviceManager\x12.\n" +
	"\vListDevices\x12\f.sriov.Empty\x1a\x11.sriov.DeviceList\x12B\n" +
	"\vAllocateVFs\x12\x18.sriov.AllocationRequest\x1a\x19.sriov.AllocationResponse\x12;\n" +
	"\n" +
	"ReleaseVFs\x12\x15.sriov.ReleaseRequest\x1a\x16.sriov.ReleaseResponse\x121\n" +
	"\x06MaskVF\x12\x12.sriov.MaskRequest\x1a\x13.sriov.MaskResponse\x127\n" +
	"\bUnmaskVF\x12\x14.sriov.UnmaskRequest\x1a\x15.sriov.UnmaskResponse\x12.\n" +
	"\tGetStatus\x12\f.sriov.Empty\x1a\x13.sriov.StatusReport\x12*\n" +
	"\tListPools\x12\f.sriov.Empty\x1a\x0f.sriov.PoolList\x124\n" +
	"\rGetPoolConfig\x12\x10.sriov.PoolQuery\x1a\x11.sriov.PoolConfig\x124\n" +
	"\x0eDumpInterfaces\x12\f.sriov.Empty\x1a\x14.sriov.InterfaceDump\x12E\n" +
	"\x13GetInterfaceDetails\x12\x15.sriov.InterfaceQuery\x1a\x17.sriov.InterfaceDetails\x124\n" +
	"\x0eGetPFHierarchy\x12\x0e.sriov.PFQuery\x1a\x12.sriov.PFHierarchyB\x14Z\x12sriov-plugin/protob\x06proto3"

var (
	file_proto_sriov_proto_rawDescOnce sync.Once
	file_proto_sriov_proto_rawDescData []byte
)

func file_proto_sriov_proto_rawDescGZIP() []byte {
	file_proto_sriov_proto_rawDescOnce.Do(func() {
		file_proto_sriov_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sriov_proto_rawDesc), len(file_proto_sriov_proto_rawDesc)))
	})
	return file_proto_sriov_proto_rawDescData
}

var file_proto_sriov_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_sriov_proto_goTypes = []any{
	(*Empty)(nil),              // 0: sriov.Empty
	(*VF)(nil),                 // 1: sriov.VF
	(*PF)(nil),                 // 2: sriov.PF
	(*DeviceList)(nil),         // 3: sriov.DeviceList
	(*AllocationRequest)(nil),  // 4: sriov.AllocationRequest
	(*AllocationResponse)(nil), // 5: sriov.AllocationResponse
	(*ReleaseRequest)(nil),     // 6: sriov.ReleaseRequest
	(*ReleaseResponse)(nil),    // 7: sriov.ReleaseResponse
	(*MaskRequest)(nil),        // 8: sriov.MaskRequest
	(*MaskResponse)(nil),       // 9: sriov.MaskResponse
	(*UnmaskRequest)(nil),      // 10: sriov.UnmaskRequest
	(*UnmaskResponse)(nil),     // 11: sriov.UnmaskResponse
	(*PoolSummary)(nil),        // 12: sriov.PoolSummary
	(*StatusReport)(nil),       // 13: sriov.StatusReport
	(*PoolQuery)(nil),          // 14: sriov.PoolQuery
	(*PoolConfig)(nil),         // 15: sriov.PoolConfig
	(*PoolList)(nil),           // 16: sriov.PoolList
	(*InterfaceDump)(nil),      // 17: sriov.InterfaceDump
	(*InterfaceQuery)(nil),     // 18: sriov.InterfaceQuery
	(*InterfaceDetails)(nil),   // 19: sriov.InterfaceDetails
	(*PFQuery)(nil),            // 20: sriov.PFQuery
	(*PFHierarchy)(nil),        // 21: sriov.PFHierarchy
	nil,                        // 22: sriov.VF.FeaturesEntry
	nil,                        // 23: sriov.InterfaceDetails.FeaturesEntry
	nil,                        // 24: sriov.InterfaceDetails.PropertiesEntry
}
var file_proto_sriov_proto_depIdxs = []int32{
	22, // 0: sriov.VF.features:type_name -> sriov.VF.FeaturesEntry
	1,  // 1: sriov.PF.vfs:type_name -> sriov.VF
	2,  // 2: sriov.DeviceList.pfs:type_name -> sriov.PF
	1,  // 3: sriov.AllocationResponse.allocated_vfs:type_name -> sriov.VF
	12, // 4: sriov.StatusReport.pools:type_name -> sriov.PoolSummary
	23, // 5: sriov.InterfaceDetails.features:type_name -> sriov.InterfaceDetails.FeaturesEntry
	24, // 6: sriov.InterfaceDetails.properties:type_name -> sriov.InterfaceDetails.PropertiesEntry
	19, // 7: sriov.PFHierarchy.pf_details:type_name -> sriov.InterfaceDetails
	19, // 8: sriov.PFHierarchy.vfs:type_name -> sriov.InterfaceDetails
	0,  // 9: sriov.SriovDeviceManager.ListDevices:input_type -> sriov.Empty
	4,  // 10: sriov.SriovDeviceManager.AllocateVFs:input_type -> sriov.AllocationRequest
	6,  // 11: sriov.SriovDeviceManager.ReleaseVFs:input_type -> sriov.ReleaseRequest
	8,  // 12: sriov.SriovDeviceManager.MaskVF:input_type -> sriov.MaskRequest
	10, // 13: sriov.SriovDeviceManager.UnmaskVF:input_type -> sriov.UnmaskRequest
	0,  // 14: sriov.SriovDeviceManager.GetStatus:input_type -> sriov.Empty
	0,  // 15: sriov.SriovDeviceManager.ListPools:input_type -> sriov.Empty
	14, // 16: sriov.SriovDeviceManager.GetPoolConfig:input_type -> sriov.PoolQuery
	0,  // 17: sriov.SriovDeviceManager.DumpInterfaces:input_type -> sriov.Empty
	18, // 18: sriov.SriovDeviceManager.GetInterfaceDetails:input_type -> sriov.InterfaceQuery
	20, // 19: sriov.SriovDeviceManager.GetPFHierarchy:input_type -> sriov.PFQuery
	3,  // 20: sriov.SriovDeviceManager.ListDevices:output_type -> sriov.DeviceList
	5,  // 21: sriov.SriovDeviceManager.AllocateVFs:output_type -> sriov.AllocationResponse
	7,  // 22: sriov.SriovDeviceManager.ReleaseVFs:output_type -> sriov.ReleaseResponse
	9,  // 23: sriov.SriovDeviceManager.MaskVF:output_type -> sriov.MaskResponse
	11, // 24: sriov.SriovDeviceManager.UnmaskVF:output_type -> sriov.UnmaskResponse
	13, // 25: sriov.SriovDeviceManager.GetStatus:output_type -> sriov.StatusReport
	16, // 26: sriov.SriovDeviceManager.ListPools:output_type -> sriov.PoolList
	15, // 27: sriov.SriovDeviceManager.GetPoolConfig:output_type -> sriov.PoolConfig
	17, // 28: sriov.SriovDeviceManager.DumpInterfaces:output_type -> sriov.InterfaceDump
	19, // 29: sriov.SriovDeviceManager.GetInterfaceDetails:output_type -> sriov.InterfaceDetails
	21, // 30: sriov.SriovDeviceManager.GetPFHierarchy:output_type -> sriov.PFHierarchy
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_sriov_proto_init() }
func file_proto_sriov_proto_init() {
	if File_proto_sriov_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sriov_proto_rawDesc), len(file_proto_sriov_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sriov_proto_goTypes,
		DependencyIndexes: file_proto_sriov_proto_depIdxs,
		MessageInfos:      file_proto_sriov_proto_msgTypes,
	}.Build()
	File_proto_sriov_proto = out.File
	file_proto_sriov_proto_goTypes = nil
	file_proto_sriov_proto_depIdxs = nil
}
